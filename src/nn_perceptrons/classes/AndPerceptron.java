package nn_perceptrons.classes;

public class AndPerceptron {
    private double[] weights;
    private double theta;
    private double learnRate;

    //this constructor is used when there are known working weights (do not use for training)
    public AndPerceptron(double[] weights, double theta, double learnRate){
        this.weights = weights;
        this.theta = theta;
        this.learnRate = learnRate;
    }

    //this constructor is used when there are not yet correct parameters generated by training
    public AndPerceptron(double[][] trainingInputs, int[] answers, double learnRate){
        initializeWeights();
        this.theta = Math.random()-0.5;
        this.learnRate = learnRate;
        train(trainingInputs, answers);
    }

    private void initializeWeights(){
        int numWeights = 2;
        weights = new double[numWeights];
        for (int i = 0; i < numWeights; i++){
            weights[i] = Math.random()-0.5;
        }
    }

    private double updateWeight(){
        return -1.0;
    }

    private void train(double[][] inputs, int[] answers){

    }

}
